{"version":3,"sources":["styles/clickyStyle.js","pages/clickyPage.js","styles/storeStyle.js","pages/storePage.js","App.js"],"names":["StyleSheet","create","page","backgroundColor","padding","minHeight","counter","flex","flexDirection","justifyContent","alignItems","counterText","marginRight","color","fontWeight","fontSize","version","position","top","left","ClickyScreen","useState","coins","setCoins","emitterLocation","setEmitterLocation","particles","setParticles","Math","round","Dimensions","get","width","screenWidth","click","setClick","loadGlobalCoins","fetch","then","response","json","data","parseInt","window","globalCoinsToUpload","globalcoins","catch","err","console","log","useFocusEffect","key","a","async","AsyncStorage","getItem","value","getData","useEffect","setTimeout","setInterval","CoinsUploading","status","uploadGlobalCoins","SafeAreaView","style","onStartShouldSetResponder","floor","random","numberOfParticles","emissionRate","interval","particleLife","direction","spread","gravity","speed","fromPosition","x","y","infiniteLoop","name","size","Text","View","titleBar","title","coinTotal","borderRadius","paddingHorizontal","paddingVertical","maxWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","coinTotalText","sectionTitle","marginTop","upgrade","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","upgradeText","upgradeButtons","upgradeButtonPrice","borderTopStartRadius","borderBottomStartRadius","upgradeButtonPriceText","upgradeButtonIcon","borderTopEndRadius","borderBottomEndRadius","StoreScreen","clickCost","setClickCost","upgradeClick","setItem","alert","Tab","createBottomTabNavigator","App","navWidth","setNavWidth","addEventListener","NavigationContainer","Navigator","screenOptions","route","tabBarIcon","iconName","iconActive","focused","zIndex","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","borderTopWidth","bottom","right","Screen","component"],"mappings":"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","file":"static/js/app.08966990.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  page: {\r\n    backgroundColor: '#272932',\r\n    padding: 25,\r\n    minHeight: '100%',\r\n  },\r\n  counter: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  counterText: {\r\n    marginRight: 5,\r\n    color: 'white',\r\n    fontWeight: '900',\r\n    fontSize: 50,\r\n  },\r\n  version: {\r\n    color: 'white',\r\n    fontWeight: '300',\r\n    fontSize: 12.5,\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, Dimensions } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Emitter } from 'react-native-particles';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport style from '../styles/clickyStyle';\r\n\r\nexport default function ClickyScreen() {\r\n    const [coins, setCoins] = useState(0);\r\n    const [emitterLocation, setEmitterLocation] = useState(0);\r\n    const [particles, setParticles] = useState(0);\r\n    const [screenWidth, setScreenWidth] = useState(Math.round(Dimensions.get('window').width));\r\n    const [click, setClick] = useState(1);\r\n\r\n    const getData = async (key) => {\r\n      try {\r\n        const value = await AsyncStorage.getItem('@'+key)\r\n        if (value !== null) {\r\n          if (key == 'upgradeClick') {\r\n            setClick(value)\r\n          }\r\n        }\r\n      } catch(e) {\r\n        // error reading value\r\n      }\r\n    }\r\n\r\n    function clickCoin() {\r\n      window.globalCoinsToUpload = window.globalCoinsToUpload + parseInt(click);\r\n      setEmitterLocation(Math.floor(Math.random() * screenWidth) + parseInt(click))\r\n      setParticles(particles + parseInt(click))\r\n      setCoins(coins + parseInt(click))\r\n    }\r\n\r\n    function uploadGlobalCoins() {\r\n      if (window.globalCoinsToUpload > 0) {\r\n        const CoinsUploading = window.globalCoinsToUpload;\r\n        // console.log('Uploading Coins... '+CoinsUploading)\r\n        fetch('https://antwanve.nl/globalclickergame/addCoin.php?coins='+CoinsUploading+'&key=19ASD9381NF23D432FGDA')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.status == 'success') {\r\n              // console.log('Uploading Coins Success')\r\n              window.globalCoinsToUpload = window.globalCoinsToUpload - CoinsUploading;\r\n              loadGlobalCoins()\r\n            }\r\n          })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        });\r\n      } else {\r\n        loadGlobalCoins()\r\n      }\r\n      \r\n    }\r\n\r\n    function loadGlobalCoins() {\r\n      // console.log('Loading Coins...')\r\n      fetch('https://antwanve.nl/globalclickergame/getCoins.php?key=19ASD9381NF23D432FGDA')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // console.log('Loading Coins Success')\r\n          setCoins(parseInt(data.coins) + window.globalCoinsToUpload);\r\n          window.globalcoins = data.coins;\r\n        })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n    useFocusEffect(() => {\r\n      getData('upgradeClick');\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        if (particles > 0) {\r\n          setParticles(particles - 1)\r\n        }\r\n      }, 100);\r\n    }, [particles]);\r\n\r\n    useEffect(() => {\r\n      window.globalCoinsToUpload = 0;\r\n      loadGlobalCoins()\r\n      setInterval(() => {\r\n        uploadGlobalCoins()\r\n      }, 10000);\r\n    }, []);\r\n\r\n    \r\n  \r\n    return (\r\n      <SafeAreaView style={style.page}\r\n        onStartShouldSetResponder={\r\n          () => clickCoin()\r\n        }\r\n      >\r\n  \r\n        <Emitter\r\n          numberOfParticles={particles}\r\n          emissionRate={1}\r\n          interval={1}\r\n          particleLife={1000}\r\n          direction={-90}\r\n          spread={360}\r\n          gravity={15}\r\n          speed={10}\r\n          fromPosition={{ x: emitterLocation - 50, y: 1 }}\r\n          infiniteLoop\r\n        >\r\n          <Icon name={'ios-disc'} size={50} color={'yellow'} />\r\n        </Emitter>\r\n\r\n        <Text style={style.version}>v0.0.5 Alpha</Text>\r\n  \r\n        <View style={style.counter}>\r\n          <Text style={style.counterText}>{coins}</Text>\r\n          <Icon name={'ios-disc'} size={50} color={'yellow'} />\r\n        </View>\r\n  \r\n      </SafeAreaView>\r\n    );\r\n  }","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  page: {\r\n    backgroundColor: '#272932',\r\n    padding: 25,\r\n    minHeight: '100%',\r\n  },\r\n  titleBar: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    color: '#FFF',\r\n    fontWeight: '800',\r\n    fontSize: 50,\r\n  },\r\n  coinTotal: {\r\n    backgroundColor: '#24262D',\r\n    borderRadius: 50,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 11.5,\r\n    maxWidth: 75,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  coinTotalText: {\r\n    color: '#fff',\r\n    fontWeight: '400',\r\n    fontSize: 15,\r\n    marginRight: 5,\r\n  },\r\n  sectionTitle: {\r\n    color: '#FFF',\r\n    fontWeight: '700',\r\n    fontSize: 30,\r\n    marginTop: 30,\r\n  },\r\n  upgrade: {\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottomColor: '#24262D',\r\n    borderBottomWidth: 1,\r\n  },\r\n  upgradeText: {\r\n    color: '#FFF',\r\n    fontWeight: '300',\r\n    fontSize: 20,\r\n  },\r\n  upgradeButtons: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    maxWidth: 120,\r\n    borderRadius: 50,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  upgradeButtonPrice: {\r\n    backgroundColor: '#24262D',\r\n    borderTopStartRadius: 50,\r\n    borderBottomStartRadius: 50,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 11.5,\r\n  },\r\n  upgradeButtonPriceText: {\r\n    color: '#fff',\r\n    fontWeight: '400',\r\n    fontSize: 15,\r\n    marginRight: 5,\r\n  },\r\n  upgradeButtonIcon: {\r\n    backgroundColor: '#1B1C22',\r\n    borderTopEndRadius: 50,\r\n    borderBottomEndRadius: 50,\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 5,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport style from '../styles/storeStyle';\r\n\r\nexport default function StoreScreen() {\r\n  const [coins, setCoins] = useState(0);\r\n  const [click, setClick] = useState(1);\r\n  const [clickCost, setClickCost] = useState(100);\r\n\r\n  const storeData = async (key, value) => {\r\n    try {\r\n      await AsyncStorage.setItem('@'+key, value)\r\n    } catch (e) {\r\n      // saving error\r\n    }\r\n  }\r\n\r\n  const getData = async (key) => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('@'+key)\r\n      if (value !== null) {\r\n        if (key == 'upgradeClick') {\r\n          setClick(value)\r\n          setClickCost(value * 123 * value)\r\n        }\r\n      }\r\n    } catch(e) {\r\n      // error reading value\r\n    }\r\n  }\r\n\r\n  function upgradeClick() {\r\n    if (coins > clickCost || coins == clickCost) {\r\n      const coinsRemoving = clickCost;\r\n      fetch('https://antwanve.nl/globalclickergame/removeCoin.php?coins='+coinsRemoving+'&key=19ASD9381NF23D432FGDA')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if (data.status == 'success') {\r\n            storeData('upgradeClick', parseInt(click) + 1);\r\n            getData('upgradeClick')\r\n            setCoins(coins - clickCost)\r\n          } else if (data.status == 'failed') {\r\n            alert('Not enough coins')\r\n          } else {\r\n            alert('An error occurred while talking to the server, please try again later')\r\n          }\r\n        })\r\n      .catch(function (err) {\r\n        // console.log(err);\r\n        alert('An error occurred while talking to the server, please try again later')\r\n      });\r\n    } else {\r\n      alert('Not enough coins')\r\n    }\r\n  }\r\n\r\n  function loadGlobalCoins() {\r\n    // console.log('Loading Coins...')\r\n    fetch('https://antwanve.nl/globalclickergame/getCoins.php?key=19ASD9381NF23D432FGDA')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // console.log('Loading Coins Success')\r\n        setCoins(parseInt(data.coins) + window.globalCoinsToUpload);\r\n      })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  useFocusEffect(() => {\r\n    setCoins(parseInt(window.globalcoins) + window.globalCoinsToUpload)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getData('upgradeClick');\r\n    setInterval(() => {\r\n      loadGlobalCoins()\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView style={style.page}>\r\n      <SafeAreaView>\r\n\r\n        <View style={style.titleBar}>\r\n          <Text style={style.title}>Store</Text>\r\n          <View style={style.coinTotal}>\r\n            <Text style={style.coinTotalText}>{coins}</Text>\r\n            <Icon name={'ios-disc'} size={18} color={'yellow'} />\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={style.sectionTitle}>Personal</Text>\r\n        <View style={style.upgrade}>\r\n          <Text style={style.upgradeText}>+1 per click</Text>\r\n          <View style={style.upgradeButtons} onStartShouldSetResponder={ () => upgradeClick() }>\r\n            <View style={style.upgradeButtonPrice}>\r\n              <Text style={style.upgradeButtonPriceText}>{clickCost}</Text>\r\n              <Icon name={'ios-disc'} size={18} color={'yellow'} />\r\n            </View>\r\n            <View style={style.upgradeButtonIcon}>\r\n              <Icon name={'ios-arrow-up'} size={30} color={'white'} />\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={style.sectionTitle}>Global</Text>\r\n\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n}","import React, { useState } from 'react';\nimport { View, Dimensions, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n//* IMPORT PAGES\nimport ClickyScreen from './pages/clickyPage';\nimport StoreScreen from './pages/storePage';\n\n//* MAIN APP\nexport default function App() {\n  const [navWidth, setNavWidth] = useState(Math.round(Dimensions.get('window').width));\n\n  Dimensions.addEventListener('change', () => {\n    setNavWidth(Math.round(Dimensions.get('window').width))\n  });\n\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            let iconActive;\n            if (route.name === 'Clicky') {\n              iconName = focused\n                ? 'ios-flash'\n                : 'ios-flash';\n              iconActive = focused\n                ? 0.8\n                : 0;\n            } else if (route.name === 'Store') {\n              iconName = focused\n                ? 'ios-cart'\n                : 'ios-cart';\n              iconActive = focused\n                ? 0.8\n                : 0;\n            }\n            return <View style={{ flex: 1, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <Icon name={iconName} size={size} color={color} style={{ zIndex: 99 }} />\n                    <View style={{ position: 'absolute', shadowColor: '#FFF', shadowOpacity: iconActive, shadowRadius: 20, elevation: 10, color: '#1B1C22' }}><Text>•</Text></View>\n                  </View>;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: '#707070',\n          showLabel: false,\n          style: {\n            backgroundColor: '#1B1C22',\n            borderTopWidth: 0,\n            minHeight: 75,\n            borderRadius: 50,\n            position: 'absolute',\n            bottom: 30,\n            right: navWidth / 2 - 100,\n            left: navWidth / 2 - 100,\n            maxWidth: 500,\n            paddingBottom: 0,\n            shadowColor: \"#000\",\n            shadowOffset: {\n              width: 0,\n              height: 5,\n            },\n            shadowOpacity: 0.2,\n            shadowRadius: 15,\n            elevation: 10,\n          }\n        }}\n      >\n        <Tab.Screen name=\"Clicky\" component={ClickyScreen} />\n        <Tab.Screen name=\"Store\" component={StoreScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"],"sourceRoot":""}